Translating SQL Query to a query body can be used in Python Elasticsearch Code. You should only return a JSON.
Then add "inner_index" to that JSON: The index should correspond to the "table" in SQL and map to the "inner_index" field.
If the SQL contains aggregation or group by, then add "code" to that JSON: The code text that I can use to retrieve variables in Python Elasticsearch response. For example, total_duration: "response['aggregations']['total_duration']['value']"

Note:
If there are aggregation functions, you need to set "size" to 0 to neglect original documents and only return aggregation results. Show as Example 2.
IMPORTANT! Only return the JSON, but not other words! 

---------------------------------------------------------------------------
Here are some examples:

Example 1:
SQL Query: SELECT city ,  max(lat) FROM station GROUP BY city
Response body:
{
    "inner_index": "station",
    "aggs": {
        "city_groups": {
            "terms": {
                "field": "city.keyword",
                "size": 10
            },
            "aggs": {
                "max_lat": {
                    "max": {
                        "field": "lat"
                    }
                }
            }
        }
    },
    "size": 0,
    "code": {
        "results": "response['aggregations']['city_groups']['buckets']"
    }
}

---------------------------------------------------------------------------
SQL: {{$sql}}
ES Query:
