--------

--------------------------1-----------------
schema:['email']
---------------------------Execute SQL Query:[SELECT email FROM user_profiles WHERE name  =  'Mary']-----------------
convert time:1.443151 s
---------------------------Execute Target Query:MATCH (u:user_profiles) WHERE u.name = 'Mary' RETURN u.email as email-----------------
MATCH (u:user_profiles) WHERE u.name = 'Mary' RETURN u.email as email
mysql res: ['{"email": "Mary@yale.edu"}']
target res: ['{"email": "Mary@yale.edu"}']
translate SELECT email FROM user_profiles WHERE name  =  'Mary' success

--------------------------2-----------------
schema:['partitionid']
---------------------------Execute SQL Query:[SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man']-----------------
convert time:2.054494 s
---------------------------Execute Target Query:MATCH (u:user_profiles) WHERE u.name = 'Iron Man' RETURN u.partitionid as partitionid-----------------
MATCH (u:user_profiles) WHERE u.name = 'Iron Man' RETURN u.partitionid as partitionid
mysql res: ['{"partitionid": 1}']
target res: ['{"partitionid": 1}']
translate SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man' success

--------------------------3-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM user_profiles]-----------------
convert time:1.034959 s
---------------------------Execute Target Query:MATCH (u:user_profiles) RETURN count(u) as count-----------------
MATCH (u:user_profiles) RETURN count(u) as count
mysql res: ['{"count_*": 7}']
target res: ['{"count": 7}']
mismatch between MySQL and target

--------------------------4-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM follows]-----------------
convert time:1.92396 s
---------------------------Execute Target Query:MATCH (f:follows) RETURN count(f) as count-----------------
MATCH (f:follows) RETURN count(f) as count
mysql res: ['{"count_*": 9}']
target res: ['{"count": 9}']
mismatch between MySQL and target

--------------------------5-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM follows GROUP BY f1]-----------------
convert time:1.46474 s
---------------------------Execute Target Query:MATCH (f:follows)
RETURN f.f1 as f1, count(*) as count_f1-----------------
MATCH (f:follows)
RETURN f.f1 as f1, count(*) as count_f1
mysql res: ['{"count_*": 3}', '{"count_*": 1}', '{"count_*": 2}', '{"count_*": 2}', '{"count_*": 1}']
target res: ['{"f1": 5, "count_f1": 2}', '{"f1": 7, "count_f1": 1}', '{"f1": 1, "count_f1": 3}', '{"f1": 2, "count_f1": 1}', '{"f1": 3, "count_f1": 2}']
mismatch between MySQL and target

--------------------------6-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM tweets]-----------------
convert time:1.008793 s
---------------------------Execute Target Query:MATCH (t:tweets) RETURN count(t) as count-----------------
MATCH (t:tweets) RETURN count(t) as count
mysql res: ['{"count_*": 8}']
target res: ['{"count": 8}']
mismatch between MySQL and target

--------------------------7-----------------
schema:['count_DISTINCT uid']
---------------------------Execute SQL Query:[SELECT count(DISTINCT uid) FROM tweets]-----------------
convert time:1.595921 s
---------------------------Execute Target Query:MATCH (t:tweets) RETURN count(DISTINCT t.uid) as count_distinct_uid-----------------
MATCH (t:tweets) RETURN count(DISTINCT t.uid) as count_distinct_uid
mysql res: ['{"count_DISTINCT uid": 5}']
target res: ['{"count_distinct_uid": 5}']
mismatch between MySQL and target

--------------------------8-----------------
schema:['name', 'email']
---------------------------Execute SQL Query:[SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%']-----------------
convert time:1.280086 s
---------------------------Execute Target Query:MATCH (u:user_profiles) WHERE u.name CONTAINS 'Swift' RETURN u.name as name, u.email as email-----------------
MATCH (u:user_profiles) WHERE u.name CONTAINS 'Swift' RETURN u.name as name, u.email as email
mysql res: ['{"name": "Tyler Swift", "email": "ts@superstar.com\\n"}']
target res: ['{"name": "Tyler Swift", "email": "ts@superstar.com\\n"}']
translate SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%' success

--------------------------9-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%']-----------------
convert time:2.320059 s
---------------------------Execute Target Query:MATCH (u:user_profiles) WHERE u.email CONTAINS 'superstar' OR u.email CONTAINS 'edu' RETURN u.name as name-----------------
MATCH (u:user_profiles) WHERE u.email CONTAINS 'superstar' OR u.email CONTAINS 'edu' RETURN u.name as name
mysql res: ['{"name": "Mary"}', '{"name": "Tyler Swift"}', '{"name": "Celine Dion"}', '{"name": "Natalie Portman"}']
target res: ['{"name": "Mary"}', '{"name": "Tyler Swift"}', '{"name": "Celine Dion"}', '{"name": "Natalie Portman"}']
translate SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%' success

--------------------------10-----------------
schema:['text']
---------------------------Execute SQL Query:[SELECT text FROM tweets WHERE text LIKE '%intern%']-----------------
convert time:2.925144 s
---------------------------Execute Target Query:MATCH (t:tweets) WHERE t.text CONTAINS 'intern' RETURN t.text as text-----------------
MATCH (t:tweets) WHERE t.text CONTAINS 'intern' RETURN t.text as text
mysql res: ['{"text": "My company is hiring interns."}']
target res: ['{"text": "My company is hiring interns."}']
translate SELECT text FROM tweets WHERE text LIKE '%intern%' success

--------------------------11-----------------
schema:['name', 'email']
---------------------------Execute SQL Query:[SELECT name ,  email FROM user_profiles WHERE followers  >  1000]-----------------
convert time:1.233332 s
---------------------------Execute Target Query:MATCH (u:user_profiles) WHERE u.followers > 1000 RETURN u.name AS name, u.email AS email-----------------
MATCH (u:user_profiles) WHERE u.followers > 1000 RETURN u.name AS name, u.email AS email
mysql res: ['{"name": "Iron Man", "email": "ts@richest.com"}', '{"name": "Black Widow\\n", "email": "bw@superhero.com"}', '{"name": "Tyler Swift", "email": "ts@superstar.com\\n"}', '{"name": "Celine Dion", "email": "cd@superstar.com"}', '{"name": "Natalie Portman", "email": "np@superstar.com"}']
target res: ['{"name": "Iron Man", "email": "ts@richest.com"}', '{"name": "Black Widow\\n", "email": "bw@superhero.com"}', '{"name": "Tyler Swift", "email": "ts@superstar.com\\n"}', '{"name": "Celine Dion", "email": "cd@superstar.com"}', '{"name": "Natalie Portman", "email": "np@superstar.com"}']
translate SELECT name ,  email FROM user_profiles WHERE followers  >  1000 success

--------------------------12-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift')]-----------------
convert time:5.238172 s
---------------------------Execute Target Query:MATCH (u:user_profiles), (f:follows) 
WHERE u.uid = f.f1 
WITH f.f1 AS uid, count(*) AS count_follows, u.name AS name 
WHERE count_follows > 
  (MATCH (u1:user_profiles), (f1:follows) 
   WHERE u1.uid = f1.f1 AND u1.name = 'Tyler Swift' 
   RETURN count(*) AS tyler_follows) 
RETURN name-----------------
MATCH (u:user_profiles), (f:follows) 
WHERE u.uid = f.f1 
WITH f.f1 AS uid, count(*) AS count_follows, u.name AS name 
WHERE count_follows > 
  (MATCH (u1:user_profiles), (f1:follows) 
   WHERE u1.uid = f1.f1 AND u1.name = 'Tyler Swift' 
   RETURN count(*) AS tyler_follows) 
RETURN name
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input ',': expected
  "!="
  "%"
  ")"
  "*"
  "+"
  "-"
  "/"
  "::"
  "<"
  "<="
  "<>"
  "="
  "=~"
  ">"
  ">="
  "AND"
  "CONTAINS"
  "ENDS"
  "IN"
  "IS"
  "OR"
  "STARTS"
  "XOR"
  "^" (line 5, column 28 (offset: 169))
"  (MATCH (u1:user_profiles), (f1:follows)"
                            ^}

--------------------------13-----------------
schema:['name', 'email']
---------------------------Execute SQL Query:[SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1]-----------------
convert time:5.699987 s
---------------------------Execute Target Query:MATCH (u:user_profiles), (f:follows) WHERE u.uid = f.f1 WITH f.f1 AS uid, count(*) AS count_star GROUP BY uid HAVING count_star > 1 RETURN u.name AS name, u.email AS email-----------------
MATCH (u:user_profiles), (f:follows) WHERE u.uid = f.f1 WITH f.f1 AS uid, count(*) AS count_star GROUP BY uid HAVING count_star > 1 RETURN u.name AS name, u.email AS email
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'GROUP': expected
  ","
  "CALL"
  "CREATE"
  "DELETE"
  "DETACH"
  "FOREACH"
  "INSERT"
  "LIMIT"
  "LOAD"
  "MATCH"
  "MERGE"
  "NODETACH"
  "OPTIONAL"
  "ORDER"
  "REMOVE"
  "RETURN"
  "SET"
  "SKIP"
  "UNION"
  "UNWIND"
  "USE"
  "WHERE"
  "WITH"
  <EOF> (line 1, column 98 (offset: 97))
"MATCH (u:user_profiles), (f:follows) WHERE u.uid = f.f1 WITH f.f1 AS uid, count(*) AS count_star GROUP BY uid HAVING count_star > 1 RETURN u.name AS name, u.email AS email"
                                                                                                  ^}

--------------------------14-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1]-----------------
convert time:2.659138 s
---------------------------Execute Target Query:MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid WITH t.uid AS uid, count(*) AS count_star GROUP BY uid HAVING count_star > 1 RETURN u.name AS name-----------------
MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid WITH t.uid AS uid, count(*) AS count_star GROUP BY uid HAVING count_star > 1 RETURN u.name AS name
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'GROUP': expected
  ","
  "CALL"
  "CREATE"
  "DELETE"
  "DETACH"
  "FOREACH"
  "INSERT"
  "LIMIT"
  "LOAD"
  "MATCH"
  "MERGE"
  "NODETACH"
  "OPTIONAL"
  "ORDER"
  "REMOVE"
  "RETURN"
  "SET"
  "SKIP"
  "UNION"
  "UNWIND"
  "USE"
  "WHERE"
  "WITH"
  <EOF> (line 1, column 99 (offset: 98))
"MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid WITH t.uid AS uid, count(*) AS count_star GROUP BY uid HAVING count_star > 1 RETURN u.name AS name"
                                                                                                   ^}

--------------------------15-----------------
schema:['f1']
---------------------------Execute SQL Query:[SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  "Mary" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  "Susan"]-----------------
convert time:16.313885 s
---------------------------Execute Target Query:MATCH (t1:user_profiles), (t2:follows) WHERE t1.uid = t2.f2 AND t1.name = "Mary"
WITH t2.f1 AS mary_f1
MATCH (t1:user_profiles), (t2:follows) WHERE t1.uid = t2.f2 AND t1.name = "Susan"
WITH mary_f1, t2.f1 AS susan_f1
WHERE mary_f1 = susan_f1
RETURN DISTINCT susan_f1 AS f1-----------------
MATCH (t1:user_profiles), (t2:follows) WHERE t1.uid = t2.f2 AND t1.name = "Mary"
WITH t2.f1 AS mary_f1
MATCH (t1:user_profiles), (t2:follows) WHERE t1.uid = t2.f2 AND t1.name = "Susan"
WITH mary_f1, t2.f1 AS susan_f1
WHERE mary_f1 = susan_f1
RETURN DISTINCT susan_f1 AS f1
mysql res: []
target res: []
translate SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  "Mary" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  "Susan" success

--------------------------16-----------------
schema:['f1']
---------------------------Execute SQL Query:[SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  "Mary" OR T1.name  =  "Susan"]-----------------
convert time:2.802991 s
---------------------------Execute Target Query:MATCH (T1:user_profiles), (T2:follows) WHERE T1.uid = T2.f2 AND (T1.name = "Mary" OR T1.name = "Susan") RETURN T2.f1 as f1-----------------
MATCH (T1:user_profiles), (T2:follows) WHERE T1.uid = T2.f2 AND (T1.name = "Mary" OR T1.name = "Susan") RETURN T2.f1 as f1
mysql res: ['{"f1": 1}', '{"f1": 3}']
target res: ['{"f1": 1}', '{"f1": 3}']
translate SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  "Mary" OR T1.name  =  "Susan" success

--------------------------17-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1]-----------------
convert time:1.632306 s
---------------------------Execute Target Query:MATCH (u:user_profiles) RETURN u.name as name ORDER BY u.followers DESC LIMIT 1-----------------
MATCH (u:user_profiles) RETURN u.name as name ORDER BY u.followers DESC LIMIT 1
mysql res: ['{"name": "Tyler Swift"}']
target res: ['{"name": "Tyler Swift"}']
translate SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1 success

--------------------------18-----------------
schema:['name', 'email']
---------------------------Execute SQL Query:[SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1]-----------------
convert time:1.416246 s
---------------------------Execute Target Query:MATCH (u:user_profiles)
RETURN u.name AS name, u.email AS email
ORDER BY u.followers ASC
LIMIT 1-----------------
MATCH (u:user_profiles)
RETURN u.name AS name, u.email AS email
ORDER BY u.followers ASC
LIMIT 1
mysql res: ['{"name": "Susan", "email": "susan@gmail.com\\n"}']
target res: ['{"name": "Susan", "email": "susan@gmail.com\\n"}']
translate SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1 success

--------------------------19-----------------
schema:['name', 'followers']
---------------------------Execute SQL Query:[SELECT name ,  followers FROM user_profiles ORDER BY followers DESC]-----------------
convert time:2.02004 s
---------------------------Execute Target Query:MATCH (u:user_profiles)
RETURN u.name AS name, u.followers AS followers
ORDER BY u.followers DESC-----------------
MATCH (u:user_profiles)
RETURN u.name AS name, u.followers AS followers
ORDER BY u.followers DESC
mysql res: ['{"name": "Tyler Swift", "followers": 99999998}', '{"name": "Natalie Portman", "followers": 94375428}', '{"name": "Black Widow\\n", "followers": 35425845}', '{"name": "Celine Dion", "followers": 23927492}', '{"name": "Iron Man", "followers": 6662425}', '{"name": "Mary", "followers": 890}', '{"name": "Susan", "followers": 100}']
target res: ['{"name": "Tyler Swift", "followers": 99999998}', '{"name": "Natalie Portman", "followers": 94375428}', '{"name": "Black Widow\\n", "followers": 35425845}', '{"name": "Celine Dion", "followers": 23927492}', '{"name": "Iron Man", "followers": 6662425}', '{"name": "Mary", "followers": 890}', '{"name": "Susan", "followers": 100}']
translate SELECT name ,  followers FROM user_profiles ORDER BY followers DESC success

--------------------------20-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5]-----------------
convert time:1.394705 s
---------------------------Execute Target Query:MATCH (u:user_profiles)
RETURN u.name as name
ORDER BY u.followers DESC
LIMIT 5-----------------
MATCH (u:user_profiles)
RETURN u.name as name
ORDER BY u.followers DESC
LIMIT 5
mysql res: ['{"name": "Tyler Swift"}', '{"name": "Natalie Portman"}', '{"name": "Black Widow\\n"}', '{"name": "Celine Dion"}', '{"name": "Iron Man"}']
target res: ['{"name": "Tyler Swift"}', '{"name": "Natalie Portman"}', '{"name": "Black Widow\\n"}', '{"name": "Celine Dion"}', '{"name": "Iron Man"}']
translate SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5 success

--------------------------21-----------------
schema:['text']
---------------------------Execute SQL Query:[SELECT text FROM tweets ORDER BY createdate]-----------------
convert time:1.481884 s
---------------------------Execute Target Query:MATCH (t:tweets) RETURN t.text as text ORDER BY t.createdate-----------------
MATCH (t:tweets) RETURN t.text as text ORDER BY t.createdate
mysql res: ['{"text": "Hello I\'m Tony Stark."}', '{"text": "Today I have went shopping at Laffayette."}', '{"text": "My company is hiring interns."}', '{"text": "Oh, I only have a few fans."}', '{"text": "Let\\u2019s celebrate women, fight for equality and support each other,  not just today, but everyday!"}', '{"text": "I love my new boyfriend."}', '{"text": "I feel tired and don\'t want to write SQLs."}', '{"text": "I had a pretty rough time during the last couple of weeks"}']
target res: ['{"text": "Hello I\'m Tony Stark."}', '{"text": "Today I have went shopping at Laffayette."}', '{"text": "My company is hiring interns."}', '{"text": "Oh, I only have a few fans."}', '{"text": "Let\\u2019s celebrate women, fight for equality and support each other,  not just today, but everyday!"}', '{"text": "I love my new boyfriend."}', '{"text": "I feel tired and don\'t want to write SQLs."}', '{"text": "I had a pretty rough time during the last couple of weeks"}']
translate SELECT text FROM tweets ORDER BY createdate success

--------------------------22-----------------
schema:['name', 'count_*']
---------------------------Execute SQL Query:[SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid]-----------------
convert time:2.198862 s
---------------------------Execute Target Query:MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid
RETURN u.name AS name, count(*) AS count_-----------------
MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid
RETURN u.name AS name, count(*) AS count_
mysql res: ['{"name": "Iron Man", "count_*": 2}', '{"name": "Black Widow\\n", "count_*": 1}', '{"name": "Susan", "count_*": 2}', '{"name": "Tyler Swift", "count_*": 1}', '{"name": "Celine Dion", "count_*": 2}']
target res: ['{"name": "Iron Man", "count_": 2}', '{"name": "Black Widow\\n", "count_": 1}', '{"name": "Susan", "count_": 2}', '{"name": "Celine Dion", "count_": 2}', '{"name": "Tyler Swift", "count_": 1}']
mismatch between MySQL and target

--------------------------23-----------------
schema:['name', 'partitionid']
---------------------------Execute SQL Query:[SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 19, column 136
convert time:2.729216 s
---------------------------Execute Target Query:MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid WITH t.uid AS uid, count(*) AS count_star, u.name AS name, u.partitionid AS partitionid WHERE count_star < 2 RETURN name, partitionid-----------------
MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid WITH t.uid AS uid, count(*) AS count_star, u.name AS name, u.partitionid AS partitionid WHERE count_star < 2 RETURN name, partitionid
mysql res: ['{"name": "Black Widow\\n", "partitionid": 23}', '{"name": "Tyler Swift", "partitionid": 10}']
target res: ['{"name": "Black Widow\\n", "partitionid": 23}', '{"name": "Tyler Swift", "partitionid": 10}']
translate SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2 success

--------------------------24-----------------
schema:['name', 'count_*']
---------------------------Execute SQL Query:[SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1]-----------------
convert time:2.330656 s
---------------------------Execute Target Query:MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid
RETURN u.name AS name, count(*) AS count_star
GROUP BY t.uid
HAVING count_star > 1-----------------
MATCH (u:user_profiles), (t:tweets) WHERE u.uid = t.uid
RETURN u.name AS name, count(*) AS count_star
GROUP BY t.uid
HAVING count_star > 1
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'GROUP': expected
  ","
  "CALL"
  "CREATE"
  "DELETE"
  "DETACH"
  "FOREACH"
  "INSERT"
  "LIMIT"
  "LOAD"
  "MATCH"
  "MERGE"
  "NODETACH"
  "OPTIONAL"
  "ORDER"
  "REMOVE"
  "RETURN"
  "SET"
  "SKIP"
  "UNION"
  "UNWIND"
  "USE"
  "WITH"
  <EOF> (line 3, column 1 (offset: 102))
"GROUP BY t.uid"
 ^}

--------------------------25-----------------
schema:['avg_followers']
---------------------------Execute SQL Query:[SELECT avg(followers) FROM user_profiles WHERE uid NOT IN (SELECT uid FROM tweets)]-----------------
convert time:1.91716 s
---------------------------Execute Target Query:MATCH (u:user_profiles)
WHERE NOT EXISTS ((u)-[:HAS_TWEET]->(:tweets))
RETURN avg(u.followers) AS avg_followers-----------------
MATCH (u:user_profiles)
WHERE NOT EXISTS ((u)-[:HAS_TWEET]->(:tweets))
RETURN avg(u.followers) AS avg_followers
mysql res: ['{"avg_followers": 47188159.0000}']
target res: ['{"avg_followers": 37198882.571428575}']
mismatch between MySQL and target

--------------------------26-----------------
schema:['avg_followers']
---------------------------Execute SQL Query:[SELECT avg(followers) FROM user_profiles WHERE uid IN (SELECT uid FROM tweets)]-----------------
convert time:2.391969 s
---------------------------Execute Target Query:MATCH (u:user_profiles)
WHERE u.uid IN [MATCH (t:tweets) RETURN t.uid]
RETURN avg(u.followers) AS avg_followers-----------------
MATCH (u:user_profiles)
WHERE u.uid IN [MATCH (t:tweets) RETURN t.uid]
RETURN avg(u.followers) AS avg_followers
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'RETURN': expected
  "!="
  "%"
  "*"
  "+"
  ","
  "-"
  "/"
  "::"
  "<"
  "<="
  "<>"
  "="
  "=~"
  ">"
  ">="
  "AND"
  "CONTAINS"
  "ENDS"
  "IN"
  "IS"
  "OR"
  "STARTS"
  "XOR"
  "]"
  "^" (line 2, column 34 (offset: 57))
"WHERE u.uid IN [MATCH (t:tweets) RETURN t.uid]"
                                  ^}

--------------------------27-----------------
schema:['max_followers', 'sum_followers']
---------------------------Execute SQL Query:[SELECT max(followers) ,  sum(followers) FROM user_profiles]-----------------
convert time:3.303299 s
---------------------------Execute Target Query:MATCH (u:user_profiles)
RETURN max(u.followers) AS max_followers, sum(u.followers) AS sum_followers-----------------
MATCH (u:user_profiles)
RETURN max(u.followers) AS max_followers, sum(u.followers) AS sum_followers
mysql res: ['{"max_followers": 99999998, "sum_followers": 260392178}']
target res: ['{"max_followers": 99999998, "sum_followers": 260392178}']
translate SELECT max(followers) ,  sum(followers) FROM user_profiles success
success_query_count: 15
valid_count: 27
accuracy: 0.5555555555555556
