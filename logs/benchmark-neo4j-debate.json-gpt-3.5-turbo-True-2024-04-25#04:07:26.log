--------

--------------------------1-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM debate]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date']
convert time:0.899669 s
---------------------------Execute Target Query:MATCH (d:debate)
RETURN count(*) as count-----------------
MATCH (d:debate)
RETURN count(*) as count
mysql res: ['{"count_*": 6}']
target res: ['{"count": 6}']
mismatch between MySQL and target

--------------------------2-----------------
schema:['venue']
---------------------------Execute SQL Query:[SELECT venue FROM debate ORDER BY num_of_audience ASC]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date']
convert time:0.841117 s
---------------------------Execute Target Query:MATCH (d:debate)
RETURN d.venue
ORDER BY d.num_of_audience ASC-----------------
MATCH (d:debate)
RETURN d.venue
ORDER BY d.num_of_audience ASC
mysql res: ['{"venue": "Manama , Bahrain"}', '{"venue": "Doha , Qatar"}', '{"venue": "Abu Dhabi , UAE"}', '{"venue": "Manama , Bahrain"}', '{"venue": "Dubai , UAE"}', '{"venue": "Manama , Bahrain"}']
target res: ['{"d.venue": "Manama , Bahrain"}', '{"d.venue": "Doha , Qatar"}', '{"d.venue": "Abu Dhabi , UAE"}', '{"d.venue": "Manama , Bahrain"}', '{"d.venue": "Dubai , UAE"}', '{"d.venue": "Manama , Bahrain"}']
mismatch between MySQL and target

--------------------------3-----------------
schema:['date', 'venue']
---------------------------Execute SQL Query:[SELECT date ,  venue FROM debate]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date']
convert time:1.363872 s
---------------------------Execute Target Query:MATCH (d:debate)
RETURN d.date, d.venue-----------------
MATCH (d:debate)
RETURN d.date, d.venue
mysql res: ['{"date": "October 21, 2011", "venue": "Manama , Bahrain"}', '{"date": "December 17, 2014", "venue": "Doha , Qatar"}', '{"date": "August 3, 2015", "venue": "Manama , Bahrain"}', '{"date": "October 27, 2015", "venue": "Manama , Bahrain"}', '{"date": "January 12, 2017", "venue": "Dubai , UAE"}', '{"date": "January 21, 2017", "venue": "Abu Dhabi , UAE"}']
target res: ['{"d.date": "October 21, 2011", "d.venue": "Manama , Bahrain"}', '{"d.date": "December 17, 2014", "d.venue": "Doha , Qatar"}', '{"d.date": "August 3, 2015", "d.venue": "Manama , Bahrain"}', '{"d.date": "October 27, 2015", "d.venue": "Manama , Bahrain"}', '{"d.date": "January 12, 2017", "d.venue": "Dubai , UAE"}', '{"d.date": "January 21, 2017", "d.venue": "Abu Dhabi , UAE"}']
mismatch between MySQL and target

--------------------------4-----------------
schema:['date']
---------------------------Execute SQL Query:[SELECT date FROM debate WHERE num_of_audience  >  150]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date']
convert time:1.158504 s
---------------------------Execute Target Query:MATCH (d:debate)
WHERE d.num_of_audience > 150
RETURN d.date as date-----------------
MATCH (d:debate)
WHERE d.num_of_audience > 150
RETURN d.date as date
mysql res: ['{"date": "October 21, 2011"}', '{"date": "October 27, 2015"}', '{"date": "January 12, 2017"}', '{"date": "January 21, 2017"}']
target res: ['{"date": "October 21, 2011"}', '{"date": "October 27, 2015"}', '{"date": "January 12, 2017"}', '{"date": "January 21, 2017"}']
translate SELECT date FROM debate WHERE num_of_audience  >  150 success

--------------------------5-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM  people WHERE age  =  35 OR age  =  36]-----------------
target_db_schema: ['country', 'name', 'age', 'is_male', 'people_id']
Error parsing XML of prompt: not well-formed (invalid token): line 14, column 44
convert time:0.878101 s
---------------------------Execute Target Query:MATCH (p:people)
WHERE p.age = 35 OR p.age = 36
RETURN p.name as name-----------------
MATCH (p:people)
WHERE p.age = 35 OR p.age = 36
RETURN p.name as name
mysql res: ['{"name": "Luther C. Carter"}', '{"name": "William B. Maclay"}', '{"name": "Charles Van Wyck"}']
target res: ['{"name": "Jamie Mickelson"}', '{"name": "Luther C. Carter"}', '{"name": "William B. Maclay"}', '{"name": "Charles Van Wyck"}']
Exception raised during comparison: Row number mismatch

--------------------------6-----------------
schema:['party']
---------------------------Execute SQL Query:[SELECT party FROM people ORDER BY age ASC LIMIT 1]-----------------
target_db_schema: ['country', 'name', 'age', 'is_male', 'people_id']
Error parsing XML of prompt: not well-formed (invalid token): line 14, column 44
convert time:0.888895 s
---------------------------Execute Target Query:MATCH (p:people)
RETURN p.party AS party
ORDER BY p.age ASC
LIMIT 1-----------------
MATCH (p:people)
RETURN p.party AS party
ORDER BY p.age ASC
LIMIT 1
mysql res: ['{"party": "Republican"}']
target res: ['{"party": null}']
mismatch between MySQL and target

--------------------------7-----------------
schema:['party', 'COUNT_*']
---------------------------Execute SQL Query:[SELECT party ,  COUNT(*) FROM people GROUP BY party]-----------------
target_db_schema: ['country', 'name', 'age', 'is_male', 'people_id']
convert time:0.842118 s
---------------------------Execute Target Query:MATCH (p:people)
WITH p.party AS party, COUNT(*) AS count
RETURN party, count-----------------
MATCH (p:people)
WITH p.party AS party, COUNT(*) AS count
RETURN party, count
mysql res: ['{"party": "Republican", "COUNT_*": 4}', '{"party": "Democratic", "COUNT_*": 3}', '{"party": "Independent Democrat", "COUNT_*": 1}', '{"party": "Anti-Lecompton Democrat", "COUNT_*": 2}']
target res: ['{"party": null, "count": 12}', '{"party": "Republican", "count": 4}', '{"party": "Democratic", "count": 3}', '{"party": "Independent Democrat", "count": 1}', '{"party": "Anti-Lecompton Democrat", "count": 2}']
Exception raised during comparison: Row number mismatch

--------------------------8-----------------
schema:['party']
---------------------------Execute SQL Query:[SELECT party FROM people GROUP BY party ORDER BY COUNT(*) DESC LIMIT 1]-----------------
target_db_schema: ['country', 'name', 'age', 'is_male', 'people_id']
convert time:3.488377 s
---------------------------Execute Target Query:MATCH (p:people)
WITH p.party AS party, COUNT(*) AS count
ORDER BY count DESC
RETURN party
LIMIT 1-----------------
MATCH (p:people)
WITH p.party AS party, COUNT(*) AS count
ORDER BY count DESC
RETURN party
LIMIT 1
mysql res: ['{"party": "Republican"}']
target res: ['{"party": null}']
mismatch between MySQL and target

--------------------------9-----------------
schema:['venue']
---------------------------Execute SQL Query:[SELECT DISTINCT venue FROM debate]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date']
convert time:0.644616 s
---------------------------Execute Target Query:MATCH (d:debate)
RETURN DISTINCT d.venue;-----------------
MATCH (d:debate)
RETURN DISTINCT d.venue;
mysql res: ['{"venue": "Manama , Bahrain"}', '{"venue": "Doha , Qatar"}', '{"venue": "Dubai , UAE"}', '{"venue": "Abu Dhabi , UAE"}']
target res: ['{"d.venue": "Manama , Bahrain"}', '{"d.venue": "Doha , Qatar"}', '{"d.venue": "Dubai , UAE"}', '{"d.venue": "Abu Dhabi , UAE"}']
mismatch between MySQL and target

--------------------------10-----------------
schema:['name', 'date', 'venue']
---------------------------Execute SQL Query:[SELECT T3.name ,  T2.date ,  T2.venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.debate_id  =  T2.debate_id JOIN people AS T3 ON T1.affirmative  =  T3.People_ID]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date', 'd', 'e', 'b', 'a', 't', 'e', '_', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'a', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', "'", ',', ' ', "'", 'd', 'e', 'b', 'a', 't', 'e', '_', 'i', 'd', "'", ',', ' ', "'", 'i', 'f', '_', 'a', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', '_', 'w', 'i', 'n', "'", ',', ' ', "'", 'n', 'e', 'g', 'a', 't', 'i', 'v', 'e', "'", ']', '\n', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'c', 'o', 'u', 'n', 't', 'r', 'y', "'", ',', ' ', "'", 'n', 'a', 'm', 'e', "'", ',', ' ', "'", 'a', 'g', 'e', "'", ',', ' ', "'", 'i', 's', '_', 'm', 'a', 'l', 'e', "'", ',', ' ', "'", 'p', 'e', 'o', 'p', 'l', 'e', '_', 'i', 'd', "'", ']', '\n']
convert time:2.097496 s
---------------------------Execute Target Query:MATCH (dp:debate_people)-[:debate_id]->(d:debate)-[:affirmative]->(p:people)
RETURN p.name AS name, d.date AS date, d.venue AS venue-----------------
MATCH (dp:debate_people)-[:debate_id]->(d:debate)-[:affirmative]->(p:people)
RETURN p.name AS name, d.date AS date, d.venue AS venue
mysql res: ['{"name": "William B. Maclay", "date": "January 21, 2017", "venue": "Abu Dhabi , UAE"}', '{"name": "Thomas J. Barr", "date": "August 3, 2015", "venue": "Manama , Bahrain"}', '{"name": "William B. Maclay", "date": "October 27, 2015", "venue": "Manama , Bahrain"}', '{"name": "James Humphrey", "date": "January 12, 2017", "venue": "Dubai , UAE"}', '{"name": "Luther C. Carter", "date": "October 21, 2011", "venue": "Manama , Bahrain"}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------11-----------------
schema:['name', 'date', 'venue']
---------------------------Execute SQL Query:[SELECT T3.name ,  T2.date ,  T2.venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.debate_id  =  T2.debate_id JOIN people AS T3 ON T1.negative  =  T3.People_ID ORDER BY T3.name ASC]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date', 'd', 'e', 'b', 'a', 't', 'e', '_', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'a', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', "'", ',', ' ', "'", 'd', 'e', 'b', 'a', 't', 'e', '_', 'i', 'd', "'", ',', ' ', "'", 'i', 'f', '_', 'a', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', '_', 'w', 'i', 'n', "'", ',', ' ', "'", 'n', 'e', 'g', 'a', 't', 'i', 'v', 'e', "'", ']', '\n', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'c', 'o', 'u', 'n', 't', 'r', 'y', "'", ',', ' ', "'", 'n', 'a', 'm', 'e', "'", ',', ' ', "'", 'a', 'g', 'e', "'", ',', ' ', "'", 'i', 's', '_', 'm', 'a', 'l', 'e', "'", ',', ' ', "'", 'p', 'e', 'o', 'p', 'l', 'e', '_', 'i', 'd', "'", ']', '\n']
Error parsing XML of prompt: not well-formed (invalid token): line 14, column 44
convert time:1.410482 s
---------------------------Execute Target Query:MATCH (dp:debate_people) -[:debate_id]-> (d:debate) -[:negative]-> (p:people)

RETURN p.name AS name, d.date AS date, d.venue AS venue

ORDER BY name ASC-----------------
MATCH (dp:debate_people) -[:debate_id]-> (d:debate) -[:negative]-> (p:people)

RETURN p.name AS name, d.date AS date, d.venue AS venue

ORDER BY name ASC
mysql res: ['{"name": "Charles Van Wyck", "date": "October 21, 2011", "venue": "Manama , Bahrain"}', '{"name": "George Briggs", "date": "August 3, 2015", "venue": "Manama , Bahrain"}', '{"name": "Horace F. Clark", "date": "October 27, 2015", "venue": "Manama , Bahrain"}', '{"name": "Horace F. Clark", "date": "January 12, 2017", "venue": "Dubai , UAE"}', '{"name": "John Cochrane", "date": "January 21, 2017", "venue": "Abu Dhabi , UAE"}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------12-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T3.name FROM debate_people AS T1 JOIN debate AS T2 ON T1.debate_id  =  T2.debate_id JOIN people AS T3 ON T1.affirmative  =  T3.People_ID WHERE T2.num_of_audience  >  200]-----------------
target_db_schema: ['venue', 'num_of_audience', 'debate_id', 'date', 'd', 'e', 'b', 'a', 't', 'e', '_', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'a', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', "'", ',', ' ', "'", 'd', 'e', 'b', 'a', 't', 'e', '_', 'i', 'd', "'", ',', ' ', "'", 'i', 'f', '_', 'a', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', '_', 'w', 'i', 'n', "'", ',', ' ', "'", 'n', 'e', 'g', 'a', 't', 'i', 'v', 'e', "'", ']', '\n', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'c', 'o', 'u', 'n', 't', 'r', 'y', "'", ',', ' ', "'", 'n', 'a', 'm', 'e', "'", ',', ' ', "'", 'a', 'g', 'e', "'", ',', ' ', "'", 'i', 's', '_', 'm', 'a', 'l', 'e', "'", ',', ' ', "'", 'p', 'e', 'o', 'p', 'l', 'e', '_', 'i', 'd', "'", ']', '\n']
Error parsing XML of prompt: not well-formed (invalid token): line 14, column 44
convert time:1.398216 s
---------------------------Execute Target Query:MATCH (dp:debate_people) -[:r]-> (d:debate) -[:r]-> (p:people)
WHERE dp.affirmative = p.People_ID AND d.num_of_audience > 200
RETURN p.name as name-----------------
MATCH (dp:debate_people) -[:r]-> (d:debate) -[:r]-> (p:people)
WHERE dp.affirmative = p.People_ID AND d.num_of_audience > 200
RETURN p.name as name
mysql res: ['{"name": "Luther C. Carter"}', '{"name": "William B. Maclay"}', '{"name": "James Humphrey"}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------13-----------------
schema:['name', 'COUNT_*']
---------------------------Execute SQL Query:[SELECT T2.name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.affirmative  =  T2.People_ID GROUP BY T2.name]-----------------
target_db_schema: ['affirmative', 'debate_id', 'if_affirmative_win', 'negative', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'c', 'o', 'u', 'n', 't', 'r', 'y', "'", ',', ' ', "'", 'n', 'a', 'm', 'e', "'", ',', ' ', "'", 'a', 'g', 'e', "'", ',', ' ', "'", 'i', 's', '_', 'm', 'a', 'l', 'e', "'", ',', ' ', "'", 'p', 'e', 'o', 'p', 'l', 'e', '_', 'i', 'd', "'", ']', '\n']
Error parsing XML of prompt: not well-formed (invalid token): line 14, column 44
convert time:1.324545 s
---------------------------Execute Target Query:MATCH (dp:debate_people) -[:AFFIRMATIVE]-> (p:people)

WITH p.name AS name, COUNT(*) AS count

RETURN name, count-----------------
MATCH (dp:debate_people) -[:AFFIRMATIVE]-> (p:people)

WITH p.name AS name, COUNT(*) AS count

RETURN name, count
mysql res: ['{"name": "William B. Maclay", "COUNT_*": 2}', '{"name": "Thomas J. Barr", "COUNT_*": 1}', '{"name": "James Humphrey", "COUNT_*": 1}', '{"name": "Luther C. Carter", "COUNT_*": 1}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------14-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T2.name FROM debate_people AS T1 JOIN people AS T2 ON T1.negative  =  T2.People_ID GROUP BY T2.name HAVING COUNT(*)  >=  2]-----------------
target_db_schema: ['affirmative', 'debate_id', 'if_affirmative_win', 'negative', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'c', 'o', 'u', 'n', 't', 'r', 'y', "'", ',', ' ', "'", 'n', 'a', 'm', 'e', "'", ',', ' ', "'", 'a', 'g', 'e', "'", ',', ' ', "'", 'i', 's', '_', 'm', 'a', 'l', 'e', "'", ',', ' ', "'", 'p', 'e', 'o', 'p', 'l', 'e', '_', 'i', 'd', "'", ']', '\n']
Error parsing XML of prompt: not well-formed (invalid token): line 14, column 44
convert time:1.124537 s
---------------------------Execute Target Query:MATCH (dp:debate_people) -[:NEGATIVE]-> (p:people)
WITH p.name AS name, COUNT(*) AS cnt
WHERE cnt >= 2
RETURN name-----------------
MATCH (dp:debate_people) -[:NEGATIVE]-> (p:people)
WITH p.name AS name, COUNT(*) AS cnt
WHERE cnt >= 2
RETURN name
mysql res: ['{"name": "Horace F. Clark"}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------15-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM people WHERE People_id NOT IN (SELECT affirmative FROM debate_people)]-----------------
target_db_schema: ['affirmative', 'debate_id', 'if_affirmative_win', 'negative', 'p', 'e', 'o', 'p', 'l', 'e', ':', ' ', '[', "'", 'c', 'o', 'u', 'n', 't', 'r', 'y', "'", ',', ' ', "'", 'n', 'a', 'm', 'e', "'", ',', ' ', "'", 'a', 'g', 'e', "'", ',', ' ', "'", 'i', 's', '_', 'm', 'a', 'l', 'e', "'", ',', ' ', "'", 'p', 'e', 'o', 'p', 'l', 'e', '_', 'i', 'd', "'", ']', '\n']
Error parsing XML of prompt: not well-formed (invalid token): line 14, column 44
convert time:1.040869 s
---------------------------Execute Target Query:MATCH (p:people)
WHERE NOT p.People_id IN (SELECT d.affirmative FROM debate_people)
RETURN p.name as name;-----------------
MATCH (p:people)
WHERE NOT p.People_id IN (SELECT d.affirmative FROM debate_people)
RETURN p.name as name;
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input '(': expected "+" or "-" (line 2, column 26 (offset: 42))
"WHERE NOT p.People_id IN (SELECT d.affirmative FROM debate_people)"
                          ^}
success_query_count: 1
valid_count: 15
accuracy: 0.06666666666666667
