--------

--------------------------1-----------------
schema:['sum_T2_balance']
---------------------------Execute SQL Query:[SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown']-----------------
convert time:2.217761 s
---------------------------Execute Target Query:MATCH (a:accounts), (s:savings) WHERE a.custid = s.custid AND a.name <> 'Brown' RETURN sum(s.balance) AS sum_balance-----------------
MATCH (a:accounts), (s:savings) WHERE a.custid = s.custid AND a.name <> 'Brown' RETURN sum(s.balance) AS sum_balance
mysql res: ['{"sum_T2_balance": 1000310300.0}']
target res: ['{"sum_balance": 1000310300.0}']
mismatch between MySQL and target

--------------------------2-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM accounts]-----------------
convert time:1.006825 s
---------------------------Execute Target Query:MATCH (a:accounts) RETURN count(a) as count-----------------
MATCH (a:accounts) RETURN count(a) as count
mysql res: ['{"count_*": 7}']
target res: ['{"count": 7}']
mismatch between MySQL and target

--------------------------3-----------------
schema:['sum_balance']
---------------------------Execute SQL Query:[SELECT sum(balance) FROM checking]-----------------
convert time:1.900828 s
---------------------------Execute Target Query:MATCH (c:checking) RETURN sum(c.balance) as sum_balance-----------------
MATCH (c:checking) RETURN sum(c.balance) as sum_balance
mysql res: ['{"sum_balance": 32084.0}']
target res: ['{"sum_balance": 32084.0}']
translate SELECT sum(balance) FROM checking success

--------------------------4-----------------
schema:['avg_balance']
---------------------------Execute SQL Query:[SELECT avg(balance) FROM checking]-----------------
convert time:1.628542 s
---------------------------Execute Target Query:MATCH (c:checking) RETURN avg(c.balance) as avg_balance-----------------
MATCH (c:checking) RETURN avg(c.balance) as avg_balance
mysql res: ['{"avg_balance": 4583.428571428572}']
target res: ['{"avg_balance": 4583.428571428572}']
translate SELECT avg(balance) FROM checking success

--------------------------5-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)]-----------------
convert time:2.31343 s
---------------------------Execute Target Query:MATCH (s:savings)
WITH avg(s.balance) AS avg_balance
MATCH (s2:savings)
WHERE s2.balance > avg_balance
RETURN count(s2) AS count-----------------
MATCH (s:savings)
WITH avg(s.balance) AS avg_balance
MATCH (s2:savings)
WHERE s2.balance > avg_balance
RETURN count(s2) AS count
mysql res: ['{"count_*": 1}']
target res: ['{"count": 1}']
mismatch between MySQL and target

--------------------------6-----------------
schema:['custid', 'name']
---------------------------Execute SQL Query:[SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 19, column 119
convert time:4.197775 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid AND c.balance < (MATCH (c2:checking) RETURN max(c2.balance) AS max_balance) RETURN a.custid AS custid, a.name AS name-----------------
MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid AND c.balance < (MATCH (c2:checking) RETURN max(c2.balance) AS max_balance) RETURN a.custid AS custid, a.name AS name
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'RETURN': expected
  "!="
  "%"
  ")"
  "*"
  "+"
  "-"
  "/"
  "::"
  "<"
  "<="
  "<>"
  "="
  "=~"
  ">"
  ">="
  "AND"
  "CONTAINS"
  "ENDS"
  "IN"
  "IS"
  "OR"
  "STARTS"
  "XOR"
  "^" (line 1, column 97 (offset: 96))
"MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid AND c.balance < (MATCH (c2:checking) RETURN max(c2.balance) AS max_balance) RETURN a.custid AS custid, a.name AS name"
                                                                                                 ^}

--------------------------7-----------------
schema:['balance']
---------------------------Execute SQL Query:[SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%']-----------------
convert time:2.670997 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid AND a.name CONTAINS 'ee' RETURN c.balance as balance-----------------
MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid AND a.name CONTAINS 'ee' RETURN c.balance as balance
mysql res: ['{"balance": 7000.0}']
target res: ['{"balance": 7000.0}']
translate SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%' success

--------------------------8-----------------
schema:['balance', 'balance']
---------------------------Execute SQL Query:[SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown']-----------------
convert time:4.178537 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND a.name = 'Brown'
RETURN c.balance AS balance_checking, s.balance AS balance_savings-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND a.name = 'Brown'
RETURN c.balance AS balance_checking, s.balance AS balance_savings
mysql res: ['{"balance": 10000.0}']
target res: ['{"balance_checking": 10000.0, "balance_savings": 200000.0}']
mismatch between MySQL and target

--------------------------9-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 19, column 254
convert time:4.385478 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND c.balance > (MATCH (c2:checking) RETURN avg(c2.balance) as avg_balance) 
AND a.custid = s.custid AND s.balance < (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance)
RETURN DISTINCT a.name as name-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND c.balance > (MATCH (c2:checking) RETURN avg(c2.balance) as avg_balance) 
AND a.custid = s.custid AND s.balance < (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance)
RETURN DISTINCT a.name as name
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'RETURN': expected
  "!="
  "%"
  ")"
  "*"
  "+"
  "-"
  "/"
  "::"
  "<"
  "<="
  "<>"
  "="
  "=~"
  ">"
  ">="
  "AND"
  "CONTAINS"
  "ENDS"
  "IN"
  "IS"
  "OR"
  "STARTS"
  "XOR"
  "^" (line 2, column 64 (offset: 109))
"WHERE a.custid = c.custid AND c.balance > (MATCH (c2:checking) RETURN avg(c2.balance) as avg_balance)"
                                                                ^}

--------------------------10-----------------
schema:['balance']
---------------------------Execute SQL Query:[SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))]-----------------
convert time:5.258639 s
---------------------------Execute Target Query:MATCH (a1:accounts), (c:checking), (a2:accounts), (s:savings)
WHERE a1.custid = c.custid AND a2.custid = s.custid AND s.balance > (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance) AND a1.name = a2.name
RETURN c.balance as balance-----------------
MATCH (a1:accounts), (c:checking), (a2:accounts), (s:savings)
WHERE a1.custid = c.custid AND a2.custid = s.custid AND s.balance > (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance) AND a1.name = a2.name
RETURN c.balance as balance
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'RETURN': expected
  "!="
  "%"
  ")"
  "*"
  "+"
  "-"
  "/"
  "::"
  "<"
  "<="
  "<>"
  "="
  "=~"
  ">"
  ">="
  "AND"
  "CONTAINS"
  "ENDS"
  "IN"
  "IS"
  "OR"
  "STARTS"
  "XOR"
  "^" (line 2, column 89 (offset: 150))
"WHERE a1.custid = c.custid AND a2.custid = s.custid AND s.balance > (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance) AND a1.name = a2.name"
                                                                                         ^}

--------------------------11-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM accounts ORDER BY name]-----------------
convert time:1.783003 s
---------------------------Execute Target Query:MATCH (a:accounts) RETURN a.name as name ORDER BY a.name-----------------
MATCH (a:accounts) RETURN a.name as name ORDER BY a.name
mysql res: ['{"name": "Brown"}', '{"name": "Granger"}', '{"name": "O\'mahony"}', '{"name": "Porter"}', '{"name": "Wang"}', '{"name": "Weeks"}', '{"name": "Wesley"}']
target res: ['{"name": "Brown"}', '{"name": "Granger"}', '{"name": "O\'mahony"}', '{"name": "Porter"}', '{"name": "Wang"}', '{"name": "Weeks"}', '{"name": "Wesley"}']
translate SELECT name FROM accounts ORDER BY name success

--------------------------12-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1]-----------------
convert time:3.201147 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN a.name as name
ORDER BY c.balance + s.balance LIMIT 1-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN a.name as name
ORDER BY c.balance + s.balance LIMIT 1
mysql res: ['{"name": "Porter"}']
target res: ['{"name": "Porter"}']
translate SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1 success

--------------------------13-----------------
schema:['name', 'T2_balance + T3_balance']
---------------------------Execute SQL Query:[SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)]-----------------
convert time:4.358043 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND s.balance > (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance)
RETURN a.name as name, c.balance + s.balance as balance_plus_balance-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND s.balance > (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance)
RETURN a.name as name, c.balance + s.balance as balance_plus_balance
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'RETURN': expected
  "!="
  "%"
  ")"
  "*"
  "+"
  "-"
  "/"
  "::"
  "<"
  "<="
  "<>"
  "="
  "=~"
  ">"
  ">="
  "AND"
  "CONTAINS"
  "ENDS"
  "IN"
  "IS"
  "OR"
  "STARTS"
  "XOR"
  "^" (line 2, column 87 (offset: 132))
"WHERE a.custid = c.custid AND a.custid = s.custid AND s.balance > (MATCH (s2:savings) RETURN avg(s2.balance) as avg_balance)"
                                                                                       ^}

--------------------------14-----------------
schema:['name', 'balance']
---------------------------Execute SQL Query:[SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1]-----------------
convert time:4.578465 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN a.name AS name, c.balance AS balance
ORDER BY s.balance
LIMIT 1-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN a.name AS name, c.balance AS balance
ORDER BY s.balance
LIMIT 1
mysql res: ['{"name": "Weeks", "balance": 7000.0}']
target res: ['{"name": "Weeks", "balance": 7000.0}']
translate SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1 success

--------------------------15-----------------
schema:['count_*', 'name']
---------------------------Execute SQL Query:[SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name]-----------------
convert time:2.183251 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid RETURN count(*) AS count, a.name AS name GROUP BY a.name-----------------
MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid RETURN count(*) AS count, a.name AS name GROUP BY a.name
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'GROUP': expected
  ","
  "CALL"
  "CREATE"
  "DELETE"
  "DETACH"
  "FOREACH"
  "INSERT"
  "LIMIT"
  "LOAD"
  "MATCH"
  "MERGE"
  "NODETACH"
  "OPTIONAL"
  "ORDER"
  "REMOVE"
  "RETURN"
  "SET"
  "SKIP"
  "UNION"
  "UNWIND"
  "USE"
  "WITH"
  <EOF> (line 1, column 101 (offset: 100))
"MATCH (a:accounts), (c:checking) WHERE a.custid = c.custid RETURN count(*) AS count, a.name AS name GROUP BY a.name"
                                                                                                     ^}

--------------------------16-----------------
schema:['sum_T2_balance', 'name']
---------------------------Execute SQL Query:[SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name]-----------------
convert time:2.29124 s
---------------------------Execute Target Query:MATCH (a:accounts), (s:savings) WHERE a.custid = s.custid
RETURN a.name as name, sum(s.balance) as sum_balance
GROUP BY a.name-----------------
MATCH (a:accounts), (s:savings) WHERE a.custid = s.custid
RETURN a.name as name, sum(s.balance) as sum_balance
GROUP BY a.name
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'GROUP': expected
  ","
  "CALL"
  "CREATE"
  "DELETE"
  "DETACH"
  "FOREACH"
  "INSERT"
  "LIMIT"
  "LOAD"
  "MATCH"
  "MERGE"
  "NODETACH"
  "OPTIONAL"
  "ORDER"
  "REMOVE"
  "RETURN"
  "SET"
  "SKIP"
  "UNION"
  "UNWIND"
  "USE"
  "WITH"
  <EOF> (line 3, column 1 (offset: 111))
"GROUP BY a.name"
 ^}

--------------------------17-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 19, column 106
convert time:2.846981 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking)
WHERE a.custid = c.custid AND c.balance < (MATCH (c2:checking) RETURN avg(c2.balance) as avg_balance)
RETURN a.name as name-----------------
MATCH (a:accounts), (c:checking)
WHERE a.custid = c.custid AND c.balance < (MATCH (c2:checking) RETURN avg(c2.balance) as avg_balance)
RETURN a.name as name
execute target query error:{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'RETURN': expected
  "!="
  "%"
  ")"
  "*"
  "+"
  "-"
  "/"
  "::"
  "<"
  "<="
  "<>"
  "="
  "=~"
  ">"
  ">="
  "AND"
  "CONTAINS"
  "ENDS"
  "IN"
  "IS"
  "OR"
  "STARTS"
  "XOR"
  "^" (line 2, column 64 (offset: 96))
"WHERE a.custid = c.custid AND c.balance < (MATCH (c2:checking) RETURN avg(c2.balance) as avg_balance)"
                                                                ^}

--------------------------18-----------------
schema:['balance']
---------------------------Execute SQL Query:[SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1]-----------------
convert time:2.621366 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN s.balance AS balance
ORDER BY c.balance DESC
LIMIT 1-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN s.balance AS balance
ORDER BY c.balance DESC
LIMIT 1
mysql res: ['{"balance": 200000.0}']
target res: ['{"balance": 200000.0}']
translate SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1 success

--------------------------19-----------------
schema:['T1_balance + T2_balance']
---------------------------Execute SQL Query:[SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance]-----------------
convert time:2.732589 s
---------------------------Execute Target Query:MATCH (c:checking), (s:savings) WHERE c.custid = s.custid RETURN c.balance + s.balance AS balance ORDER BY balance-----------------
MATCH (c:checking), (s:savings) WHERE c.custid = s.custid RETURN c.balance + s.balance AS balance ORDER BY balance
mysql res: ['{"T1_balance + T2_balance": 317.0}', '{"T1_balance + T2_balance": 7060.0}', '{"T1_balance + T2_balance": 90000.0}', '{"T1_balance + T2_balance": 210000.0}', '{"T1_balance + T2_balance": 233000.0}', '{"T1_balance + T2_balance": 1000002000.0}']
target res: ['{"balance": 317.0}', '{"balance": 7060.0}', '{"balance": 90000.0}', '{"balance": 210000.0}', '{"balance": 233000.0}', '{"balance": 1000002000.0}']
mismatch between MySQL and target

--------------------------20-----------------
schema:['balance', 'name']
---------------------------Execute SQL Query:[SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1]-----------------
convert time:3.904861 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN c.balance AS balance, a.name AS name
ORDER BY s.balance
LIMIT 1-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN c.balance AS balance, a.name AS name
ORDER BY s.balance
LIMIT 1
mysql res: ['{"balance": 7000.0, "name": "Weeks"}']
target res: ['{"balance": 7000.0, "name": "Weeks"}']
translate SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1 success

--------------------------21-----------------
schema:['balance', 'balance', 'name']
---------------------------Execute SQL Query:[SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid]-----------------
convert time:4.143388 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN c.balance AS balance_checking, s.balance AS balance_savings, a.name AS name-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN c.balance AS balance_checking, s.balance AS balance_savings, a.name AS name
mysql res: ['{"balance": 10000.0, "name": "Brown"}', '{"balance": 2000.0, "name": "Wang"}', '{"balance": 3000.0, "name": "O\'mahony"}', '{"balance": 7000.0, "name": "Weeks"}', '{"balance": 10000.0, "name": "Granger"}', '{"balance": 77.0, "name": "Porter"}']
target res: ['{"balance_checking": 10000.0, "balance_savings": 200000.0, "name": "Brown"}', '{"balance_checking": 2000.0, "balance_savings": 1000000000.0, "name": "Wang"}', '{"balance_checking": 3000.0, "balance_savings": 230000.0, "name": "O\'mahony"}', '{"balance_checking": 7000.0, "balance_savings": 60.0, "name": "Weeks"}', '{"balance_checking": 10000.0, "balance_savings": 80000.0, "name": "Granger"}', '{"balance_checking": 77.0, "balance_savings": 240.0, "name": "Porter"}']
mismatch between MySQL and target

--------------------------22-----------------
schema:['balance', 'balance', 'name']
---------------------------Execute SQL Query:[SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC]-----------------
convert time:4.158793 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN c.balance AS balance_checking, s.balance AS balance_savings, a.name AS name
ORDER BY c.balance + s.balance DESC-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid
RETURN c.balance AS balance_checking, s.balance AS balance_savings, a.name AS name
ORDER BY c.balance + s.balance DESC
mysql res: ['{"balance": 2000.0, "name": "Wang"}', '{"balance": 3000.0, "name": "O\'mahony"}', '{"balance": 10000.0, "name": "Brown"}', '{"balance": 10000.0, "name": "Granger"}', '{"balance": 7000.0, "name": "Weeks"}', '{"balance": 77.0, "name": "Porter"}']
target res: ['{"balance_checking": 2000.0, "balance_savings": 1000000000.0, "name": "Wang"}', '{"balance_checking": 3000.0, "balance_savings": 230000.0, "name": "O\'mahony"}', '{"balance_checking": 10000.0, "balance_savings": 200000.0, "name": "Brown"}', '{"balance_checking": 10000.0, "balance_savings": 80000.0, "name": "Granger"}', '{"balance_checking": 7000.0, "balance_savings": 60.0, "name": "Weeks"}', '{"balance_checking": 77.0, "balance_savings": 240.0, "name": "Porter"}']
mismatch between MySQL and target

--------------------------23-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance]-----------------
convert time:2.660494 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND c.balance > s.balance
RETURN a.name as name-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND c.balance > s.balance
RETURN a.name as name
mysql res: ['{"name": "Weeks"}']
target res: ['{"name": "Weeks"}']
translate SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance success

--------------------------24-----------------
schema:['name', 'T3_balance + T2_balance']
---------------------------Execute SQL Query:[SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 19, column 179
convert time:4.001137 s
---------------------------Execute Target Query:MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND s.balance < c.balance
RETURN a.name AS name, s.balance + c.balance AS balance-----------------
MATCH (a:accounts), (c:checking), (s:savings)
WHERE a.custid = c.custid AND a.custid = s.custid AND s.balance < c.balance
RETURN a.name AS name, s.balance + c.balance AS balance
mysql res: ['{"name": "Weeks", "T3_balance + T2_balance": 7060.0}']
target res: ['{"name": "Weeks", "balance": 7060.0}']
mismatch between MySQL and target

--------------------------25-----------------
schema:['name', 'balance']
---------------------------Execute SQL Query:[SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3]-----------------
convert time:2.748242 s
---------------------------Execute Target Query:MATCH (a:accounts), (s:savings) WHERE a.custid = s.custid RETURN a.name AS name, s.balance AS balance ORDER BY s.balance DESC LIMIT 3-----------------
MATCH (a:accounts), (s:savings) WHERE a.custid = s.custid RETURN a.name AS name, s.balance AS balance ORDER BY s.balance DESC LIMIT 3
mysql res: ['{"name": "Wang", "balance": 1000000000.0}', '{"name": "O\'mahony", "balance": 230000.0}', '{"name": "Brown", "balance": 200000.0}']
target res: ['{"name": "Wang", "balance": 1000000000.0}', '{"name": "O\'mahony", "balance": 230000.0}', '{"name": "Brown", "balance": 200000.0}']
translate SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3 success
success_query_count: 10
valid_count: 25
accuracy: 0.4
