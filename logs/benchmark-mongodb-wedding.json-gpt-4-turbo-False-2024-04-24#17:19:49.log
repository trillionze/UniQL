--------

--------------------------1-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM church WHERE open_date  <  1850]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 18, column 51
convert time:5.46388 s
---------------------------Execute Target Query:db.church.aggregate([{ "$match": { "open_date": { "$lt": 1850 } } }, { "$count": "count" }])-----------------
here we are in executor, and the query is:  db.church.aggregate([{ "$match": { "open_date": { "$lt": 1850 } } }, { "$count": "count" }])
result of mongodb: ['{"count": 9}']
mysql res: ['{"count_*": 9}']
target res: ['{"count_*": null}']
mismatch between MySQL and target

--------------------------2-----------------
schema:['name', 'open_date', 'organized_by']
---------------------------Execute SQL Query:[SELECT name ,  open_date ,  organized_by FROM church]-----------------
convert time:1.925107 s
---------------------------Execute Target Query:db.church.find({}, { "name": 1, "open_date": 1, "organized_by": 1, "_id": 0 })-----------------
here we are in executor, and the query is:  db.church.find({}, { "name": 1, "open_date": 1, "organized_by": 1, "_id": 0 })
result of mongodb: ['{"name": "Pure Church of Christ", "open_date": 1831, "organized_by": "Wycam Clark"}', '{"name": "Independent Church", "open_date": 1832, "organized_by": "\\u2013 Hoton"}', '{"name": "Church of Christ", "open_date": 1836, "organized_by": "Ezra Booth"}', '{"name": "Church of Christ (Parrishite)", "open_date": 1837, "organized_by": "Warren Parrish"}', '{"name": "Alston Church", "open_date": 1839, "organized_by": "Isaac Russell"}', '{"name": "Church of Christ", "open_date": 1830, "organized_by": "William Chubby"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife", "open_date": 1840, "organized_by": "George M. Hinkle"}', '{"name": "Church of Christ", "open_date": 1842, "organized_by": "Hiram Page"}', '{"name": "True Church of Jesus Christ of Latter Day Saints", "open_date": 1844, "organized_by": "William Law"}']
mysql res: ['{"name": "Pure Church of Christ", "open_date": 1831, "organized_by": "Wycam Clark"}', '{"name": "Independent Church", "open_date": 1832, "organized_by": "\\u2013 Hoton"}', '{"name": "Church of Christ", "open_date": 1836, "organized_by": "Ezra Booth"}', '{"name": "Church of Christ (Parrishite)", "open_date": 1837, "organized_by": "Warren Parrish"}', '{"name": "Alston Church", "open_date": 1839, "organized_by": "Isaac Russell"}', '{"name": "Church of Christ", "open_date": 1830, "organized_by": "William Chubby"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife", "open_date": 1840, "organized_by": "George M. Hinkle"}', '{"name": "Church of Christ", "open_date": 1842, "organized_by": "Hiram Page"}', '{"name": "True Church of Jesus Christ of Latter Day Saints", "open_date": 1844, "organized_by": "William Law"}']
target res: ['{"name": "Pure Church of Christ", "open_date": 1831, "organized_by": "Wycam Clark"}', '{"name": "Independent Church", "open_date": 1832, "organized_by": "\\u2013 Hoton"}', '{"name": "Church of Christ", "open_date": 1836, "organized_by": "Ezra Booth"}', '{"name": "Church of Christ (Parrishite)", "open_date": 1837, "organized_by": "Warren Parrish"}', '{"name": "Alston Church", "open_date": 1839, "organized_by": "Isaac Russell"}', '{"name": "Church of Christ", "open_date": 1830, "organized_by": "William Chubby"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife", "open_date": 1840, "organized_by": "George M. Hinkle"}', '{"name": "Church of Christ", "open_date": 1842, "organized_by": "Hiram Page"}', '{"name": "True Church of Jesus Christ of Latter Day Saints", "open_date": 1844, "organized_by": "William Law"}']
translate SELECT name ,  open_date ,  organized_by FROM church success

--------------------------3-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM church ORDER BY open_date DESC]-----------------
convert time:1.413245 s
---------------------------Execute Target Query:db.church.find({}, { "name": 1, "_id": 0 }).sort({ "open_date": -1 })-----------------
here we are in executor, and the query is:  db.church.find({}, { "name": 1, "_id": 0 }).sort({ "open_date": -1 })
result of mongodb: ['{"name": "True Church of Jesus Christ of Latter Day Saints"}', '{"name": "Church of Christ"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife"}', '{"name": "Alston Church"}', '{"name": "Church of Christ (Parrishite)"}', '{"name": "Church of Christ"}', '{"name": "Independent Church"}', '{"name": "Pure Church of Christ"}', '{"name": "Church of Christ"}']
mysql res: ['{"name": "True Church of Jesus Christ of Latter Day Saints"}', '{"name": "Church of Christ"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife"}', '{"name": "Alston Church"}', '{"name": "Church of Christ (Parrishite)"}', '{"name": "Church of Christ"}', '{"name": "Independent Church"}', '{"name": "Pure Church of Christ"}', '{"name": "Church of Christ"}']
target res: ['{"name": "True Church of Jesus Christ of Latter Day Saints"}', '{"name": "Church of Christ"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife"}', '{"name": "Alston Church"}', '{"name": "Church of Christ (Parrishite)"}', '{"name": "Church of Christ"}', '{"name": "Independent Church"}', '{"name": "Pure Church of Christ"}', '{"name": "Church of Christ"}']
translate SELECT name FROM church ORDER BY open_date DESC success

--------------------------4-----------------
schema:['open_date']
---------------------------Execute SQL Query:[SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2]-----------------
convert time:4.956143 s
---------------------------Execute Target Query:db.church.aggregate([ { "$group": { "_id": "$open_date", "count": { "$sum": 1 } } }, { "$match": { "count": { "$gte": 2 } } }, { "$project": { "open_date": "$_id", "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.church.aggregate([ { "$group": { "_id": "$open_date", "count": { "$sum": 1 } } }, { "$match": { "count": { "$gte": 2 } } }, { "$project": { "open_date": "$_id", "_id": 0 } } ])
result of mongodb: []
mysql res: []
target res: []
translate SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2 success

--------------------------5-----------------
schema:['organized_by', 'name']
---------------------------Execute SQL Query:[SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840]-----------------
convert time:2.959057 s
---------------------------Execute Target Query:db.church.find({ "open_date": { "$gte": 1830, "$lte": 1840 } }, { "organized_by": 1, "name": 1, "_id": 0 })-----------------
here we are in executor, and the query is:  db.church.find({ "open_date": { "$gte": 1830, "$lte": 1840 } }, { "organized_by": 1, "name": 1, "_id": 0 })
result of mongodb: ['{"name": "Pure Church of Christ", "organized_by": "Wycam Clark"}', '{"name": "Independent Church", "organized_by": "\\u2013 Hoton"}', '{"name": "Church of Christ", "organized_by": "Ezra Booth"}', '{"name": "Church of Christ (Parrishite)", "organized_by": "Warren Parrish"}', '{"name": "Alston Church", "organized_by": "Isaac Russell"}', '{"name": "Church of Christ", "organized_by": "William Chubby"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife", "organized_by": "George M. Hinkle"}']
mysql res: ['{"organized_by": "Wycam Clark", "name": "Pure Church of Christ"}', '{"organized_by": "\\u2013 Hoton", "name": "Independent Church"}', '{"organized_by": "Ezra Booth", "name": "Church of Christ"}', '{"organized_by": "Warren Parrish", "name": "Church of Christ (Parrishite)"}', '{"organized_by": "Isaac Russell", "name": "Alston Church"}', '{"organized_by": "William Chubby", "name": "Church of Christ"}', '{"organized_by": "George M. Hinkle", "name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife"}']
target res: ['{"organized_by": "Wycam Clark", "name": "Pure Church of Christ"}', '{"organized_by": "\\u2013 Hoton", "name": "Independent Church"}', '{"organized_by": "Ezra Booth", "name": "Church of Christ"}', '{"organized_by": "Warren Parrish", "name": "Church of Christ (Parrishite)"}', '{"organized_by": "Isaac Russell", "name": "Alston Church"}', '{"organized_by": "William Chubby", "name": "Church of Christ"}', '{"organized_by": "George M. Hinkle", "name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife"}']
translate SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840 success

--------------------------6-----------------
schema:['open_date', 'count_*']
---------------------------Execute SQL Query:[SELECT open_date ,  count(*) FROM church GROUP BY open_date]-----------------
convert time:3.4628 s
---------------------------Execute Target Query:db.church.aggregate([ { "$group": { "_id": "$open_date", "count": { "$sum": 1 } } }, { "$project": { "open_date": "$_id", "count": 1, "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.church.aggregate([ { "$group": { "_id": "$open_date", "count": { "$sum": 1 } } }, { "$project": { "open_date": "$_id", "count": 1, "_id": 0 } } ])
result of mongodb: ['{"count": 1, "open_date": 1830}', '{"count": 1, "open_date": 1831}', '{"count": 1, "open_date": 1842}', '{"count": 1, "open_date": 1844}', '{"count": 1, "open_date": 1836}', '{"count": 1, "open_date": 1839}', '{"count": 1, "open_date": 1832}', '{"count": 1, "open_date": 1837}', '{"count": 1, "open_date": 1840}']
mysql res: ['{"open_date": 1831, "count_*": 1}', '{"open_date": 1832, "count_*": 1}', '{"open_date": 1836, "count_*": 1}', '{"open_date": 1837, "count_*": 1}', '{"open_date": 1839, "count_*": 1}', '{"open_date": 1830, "count_*": 1}', '{"open_date": 1840, "count_*": 1}', '{"open_date": 1842, "count_*": 1}', '{"open_date": 1844, "count_*": 1}']
target res: ['{"open_date": 1830, "count_*": null}', '{"open_date": 1831, "count_*": null}', '{"open_date": 1842, "count_*": null}', '{"open_date": 1844, "count_*": null}', '{"open_date": 1836, "count_*": null}', '{"open_date": 1839, "count_*": null}', '{"open_date": 1832, "count_*": null}', '{"open_date": 1837, "count_*": null}', '{"open_date": 1840, "count_*": null}']
mismatch between MySQL and target

--------------------------7-----------------
schema:['name', 'open_date']
---------------------------Execute SQL Query:[SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3]-----------------
convert time:2.826588 s
---------------------------Execute Target Query:db.church.find({}, { "name": 1, "open_date": 1, "_id": 0 }).sort({ "open_date": -1 }).limit(3)-----------------
here we are in executor, and the query is:  db.church.find({}, { "name": 1, "open_date": 1, "_id": 0 }).sort({ "open_date": -1 }).limit(3)
result of mongodb: ['{"name": "True Church of Jesus Christ of Latter Day Saints", "open_date": 1844}', '{"name": "Church of Christ", "open_date": 1842}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife", "open_date": 1840}']
mysql res: ['{"name": "True Church of Jesus Christ of Latter Day Saints", "open_date": 1844}', '{"name": "Church of Christ", "open_date": 1842}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife", "open_date": 1840}']
target res: ['{"name": "True Church of Jesus Christ of Latter Day Saints", "open_date": 1844}', '{"name": "Church of Christ", "open_date": 1842}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife", "open_date": 1840}']
translate SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3 success

--------------------------8-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30]-----------------
convert time:2.698243 s
---------------------------Execute Target Query:db.people.aggregate([{ "$match": { "is_male": "F", "age": { "$gt": 30 } } }, { "$count": "count" }])-----------------
here we are in executor, and the query is:  db.people.aggregate([{ "$match": { "is_male": "F", "age": { "$gt": 30 } } }, { "$count": "count" }])
result of mongodb: []
mysql res: ['{"count_*": 3}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------9-----------------
schema:['country']
---------------------------Execute SQL Query:[SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 18, column 44
convert time:4.09879 s
---------------------------Execute Target Query:db.people.aggregate([ { "$match": { "$or": [ { "age": { "$lt": 25 } }, { "age": { "$gt": 30 } } ] } }, { "$group": { "_id": "$country" } }, { "$project": { "country": "$_id", "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.people.aggregate([ { "$match": { "$or": [ { "age": { "$lt": 25 } }, { "age": { "$gt": 30 } } ] } }, { "$group": { "_id": "$country" } }, { "$project": { "country": "$_id", "_id": 0 } } ])
result of mongodb: ['{"country": "Sweden"}', '{"country": "Canada"}', '{"country": "United States"}', '{"country": "Northern Ireland"}']
mysql res: []
target res: ['{"country": "Sweden"}', '{"country": "Canada"}', '{"country": "United States"}', '{"country": "Northern Ireland"}']
Exception raised during comparison: Row number mismatch

--------------------------10-----------------
schema:['min_age', 'max_age', 'avg_age']
---------------------------Execute SQL Query:[SELECT min(age) ,  max(age) ,  avg(age) FROM people]-----------------
convert time:2.957643 s
---------------------------Execute Target Query:db.people.aggregate([{ "$group": { "_id": None, "min_age": { "$min": "$age" }, "max_age": { "$max": "$age" }, "avg_age": { "$avg": "$age" } } }])-----------------
here we are in executor, and the query is:  db.people.aggregate([{ "$group": { "_id": None, "min_age": { "$min": "$age" }, "max_age": { "$max": "$age" }, "avg_age": { "$avg": "$age" } } }])
result of mongodb: ['{"_id": null, "min_age": 25, "max_age": 36, "avg_age": 30.166666666666668}']
mysql res: ['{"min_age": 25, "max_age": 36, "avg_age": 30.1667}']
target res: ['{"min_age": 25, "max_age": 36, "avg_age": 30.166666666666668}']
mismatch between MySQL and target

--------------------------11-----------------
schema:['name', 'country']
---------------------------Execute SQL Query:[SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)]-----------------
Error parsing XML of prompt: not well-formed (invalid token): line 18, column 52
convert time:7.154767 s
---------------------------Execute Target Query:db.people.aggregate([ { "$group": { "_id": None, "avg_age": { "$avg": "$age" } } }, { "$lookup": { "from": "people", "let": { "avg_age": "$avg_age" }, "pipeline": [ { "$match": { "$expr": { "$lt": [ "$age", "$$avg_age" ] } } }, { "$project": { "name": 1, "country": 1, "_id": 0 } } ], "as": "results" } }, { "$unwind": "$results" }, { "$replaceRoot": { "newRoot": "$results" } } ])-----------------
here we are in executor, and the query is:  db.people.aggregate([ { "$group": { "_id": None, "avg_age": { "$avg": "$age" } } }, { "$lookup": { "from": "people", "let": { "avg_age": "$avg_age" }, "pipeline": [ { "$match": { "$expr": { "$lt": [ "$age", "$$avg_age" ] } } }, { "$project": { "name": 1, "country": 1, "_id": 0 } } ], "as": "results" } }, { "$unwind": "$results" }, { "$replaceRoot": { "newRoot": "$results" } } ])
result of mongodb: ['{"country": "United States", "name": "Ricky Barnes"}', '{"country": "United States", "name": "Summer Duval"}', '{"country": "United States", "name": "Todd Hamilton"}', '{"country": "United States", "name": "Annie Mediate"}', '{"country": "Australia", "name": "Adam Scott"}', '{"country": "United States", "name": "Danny Toms"}']
mysql res: ['{"name": "Ricky Barnes", "country": "United States"}', '{"name": "Summer Duval", "country": "United States"}', '{"name": "Todd Hamilton", "country": "United States"}', '{"name": "Annie Mediate", "country": "United States"}', '{"name": "Adam Scott", "country": "Australia"}', '{"name": "Danny Toms", "country": "United States"}']
target res: ['{"name": "Ricky Barnes", "country": "United States"}', '{"name": "Summer Duval", "country": "United States"}', '{"name": "Todd Hamilton", "country": "United States"}', '{"name": "Annie Mediate", "country": "United States"}', '{"name": "Adam Scott", "country": "Australia"}', '{"name": "Danny Toms", "country": "United States"}']
translate SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people) success

--------------------------12-----------------
schema:['name', 'name']
---------------------------Execute SQL Query:[SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014]-----------------
convert time:9.003131 s
---------------------------Execute Target Query:db.wedding.aggregate([ { "$match": { "year": { "$gt": 2014 } } }, { "$lookup": { "from": "people", "localField": "male_id", "foreignField": "people_id", "as": "male" } }, { "$lookup": { "from": "people", "localField": "female_id", "foreignField": "people_id", "as": "female" } }, { "$unwind": "$male" }, { "$unwind": "$female" }, { "$project": { "male_name": "$male.name", "female_name": "$female.name", "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.wedding.aggregate([ { "$match": { "year": { "$gt": 2014 } } }, { "$lookup": { "from": "people", "localField": "male_id", "foreignField": "people_id", "as": "male" } }, { "$lookup": { "from": "people", "localField": "female_id", "foreignField": "people_id", "as": "female" } }, { "$unwind": "$male" }, { "$unwind": "$female" }, { "$project": { "male_name": "$male.name", "female_name": "$female.name", "_id": 0 } } ])
result of mongodb: ['{"male_name": "Ricky Barnes", "female_name": "Summer Duval"}', '{"male_name": "Lucas Glover", "female_name": "Joe O\'Hair"}', '{"male_name": "Todd Hamilton", "female_name": "Annie Mediate"}']
mysql res: ['{"name": "Ricky Barnes"}', '{"name": "Lucas Glover"}', '{"name": "Todd Hamilton"}']
target res: ['{"name": null}', '{"name": null}', '{"name": null}']
mismatch between MySQL and target

--------------------------13-----------------
schema:['name', 'age']
---------------------------Execute SQL Query:[SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)]-----------------
convert time:3.114198 s
---------------------------Execute Target Query:db.people.find({ "is_male": "T", "people_id": { "$nin": db.wedding.distinct("male_id") } }, { "name": 1, "age": 1, "_id": 0 })-----------------
here we are in executor, and the query is:  db.people.find({ "is_male": "T", "people_id": { "$nin": db.wedding.distinct("male_id") } }, { "name": 1, "age": 1, "_id": 0 })
result of mongodb: []
mysql res: ['{"name": "Graeme McDowell", "age": 34}', '{"name": "Adam Scott", "age": 26}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------14-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015]-----------------
convert time:10.718957 s
---------------------------Execute Target Query:db.church.aggregate([ { "$lookup": { "from": "wedding", "localField": "church_id", "foreignField": "church_id", "as": "wedding" } }, { "$match": { "wedding.year": 2015 } }, { "$project": { "name": 1, "_id": 0 } }, { "$group": { "_id": None, "names": { "$addToSet": "$name" } } }, { "$project": { "excludedNames": "$names" } }, { "$lookup": { "from": "church", "pipeline": [], "as": "allNames" } }, { "$project": { "allNames.name": 1, "_id": 0 } }, { "$project": { "name": { "$setDifference": ["$allNames.name", "$excludedNames"] } } } ])-----------------
here we are in executor, and the query is:  db.church.aggregate([ { "$lookup": { "from": "wedding", "localField": "church_id", "foreignField": "church_id", "as": "wedding" } }, { "$match": { "wedding.year": 2015 } }, { "$project": { "name": 1, "_id": 0 } }, { "$group": { "_id": None, "names": { "$addToSet": "$name" } } }, { "$project": { "excludedNames": "$names" } }, { "$lookup": { "from": "church", "pipeline": [], "as": "allNames" } }, { "$project": { "allNames.name": 1, "_id": 0 } }, { "$project": { "name": { "$setDifference": ["$allNames.name", "$excludedNames"] } } } ])
result of mongodb: ['{"name": null}']
mysql res: ['{"name": "Pure Church of Christ"}', '{"name": "Independent Church"}', '{"name": "Church of Christ (Parrishite)"}', '{"name": "Alston Church"}', '{"name": "Church of Jesus Christ, the Bride, the Lamb\'s Wife"}', '{"name": "True Church of Jesus Christ of Latter Day Saints"}']
target res: ['{"name": null}']
Exception raised during comparison: Row number mismatch

--------------------------15-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2]-----------------
convert time:7.253351 s
---------------------------Execute Target Query:db.church.aggregate([ { "$lookup": { "from": "wedding", "localField": "church_id", "foreignField": "church_id", "as": "wedding" } }, { "$unwind": "$wedding" }, { "$group": { "_id": "$church_id", "name": { "$first": "$name" }, "count": { "$sum": 1 } } }, { "$match": { "count": { "$gte": 2 } } }, { "$project": { "name": 1, "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.church.aggregate([ { "$lookup": { "from": "wedding", "localField": "church_id", "foreignField": "church_id", "as": "wedding" } }, { "$unwind": "$wedding" }, { "$group": { "_id": "$church_id", "name": { "$first": "$name" }, "count": { "$sum": 1 } } }, { "$match": { "count": { "$gte": 2 } } }, { "$project": { "name": 1, "_id": 0 } } ])
result of mongodb: []
mysql res: []
target res: []
translate SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2 success

--------------------------16-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada']-----------------
convert time:5.973499 s
---------------------------Execute Target Query:db.wedding.aggregate([ { "$lookup": { "from": "people", "localField": "female_id", "foreignField": "people_id", "as": "people" } }, { "$unwind": "$people" }, { "$match": { "year": 2016, "people.is_male": "F", "people.country": "Canada" } }, { "$project": { "name": "$people.name", "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.wedding.aggregate([ { "$lookup": { "from": "people", "localField": "female_id", "foreignField": "people_id", "as": "people" } }, { "$unwind": "$people" }, { "$match": { "year": 2016, "people.is_male": "F", "people.country": "Canada" } }, { "$project": { "name": "$people.name", "_id": 0 } } ])
result of mongodb: []
mysql res: []
target res: []
translate SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada' success

--------------------------17-----------------
schema:['count_*']
---------------------------Execute SQL Query:[SELECT count(*) FROM wedding WHERE YEAR  =  2016]-----------------
convert time:1.836826 s
---------------------------Execute Target Query:db.wedding.aggregate([{ "$match": { "YEAR": 2016 } }, { "$count": "count" }])-----------------
here we are in executor, and the query is:  db.wedding.aggregate([{ "$match": { "YEAR": 2016 } }, { "$count": "count" }])
result of mongodb: []
mysql res: ['{"count_*": 2}']
target res: []
Exception raised during comparison: Row number mismatch

--------------------------18-----------------
schema:['name']
---------------------------Execute SQL Query:[SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30]-----------------
convert time:8.695858 s
---------------------------Execute Target Query:db.wedding.aggregate([ { "$lookup": { "from": "people", "localField": "male_id", "foreignField": "people_id", "as": "male" } }, { "$lookup": { "from": "people", "localField": "female_id", "foreignField": "people_id", "as": "female" } }, { "$lookup": { "from": "church", "localField": "church_id", "foreignField": "church_id", "as": "church" } }, { "$match": { "$or": [ { "male.age": { "$gt": 30 } }, { "female.age": { "$gt": 30 } } ] } }, { "$project": { "church_name": "$church.name", "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.wedding.aggregate([ { "$lookup": { "from": "people", "localField": "male_id", "foreignField": "people_id", "as": "male" } }, { "$lookup": { "from": "people", "localField": "female_id", "foreignField": "people_id", "as": "female" } }, { "$lookup": { "from": "church", "localField": "church_id", "foreignField": "church_id", "as": "church" } }, { "$match": { "$or": [ { "male.age": { "$gt": 30 } }, { "female.age": { "$gt": 30 } } ] } }, { "$project": { "church_name": "$church.name", "_id": 0 } } ])
result of mongodb: ['{"church_name": ["Pure Church of Christ"]}', '{"church_name": ["Church of Christ (Parrishite)"]}']
mysql res: ['{"name": "Pure Church of Christ"}', '{"name": "Church of Christ (Parrishite)"}']
target res: ['{"name": null}', '{"name": null}']
mismatch between MySQL and target

--------------------------19-----------------
schema:['country', 'count_*']
---------------------------Execute SQL Query:[SELECT country ,  count(*) FROM people GROUP BY country]-----------------
convert time:3.206381 s
---------------------------Execute Target Query:db.people.aggregate([ { "$group": { "_id": "$country", "count": { "$sum": 1 } } }, { "$project": { "country": "$_id", "count": 1, "_id": 0 } } ])-----------------
here we are in executor, and the query is:  db.people.aggregate([ { "$group": { "_id": "$country", "count": { "$sum": 1 } } }, { "$project": { "country": "$_id", "count": 1, "_id": 0 } } ])
result of mongodb: ['{"count": 1, "country": "Sweden"}', '{"count": 1, "country": "Northern Ireland"}', '{"count": 1, "country": "Australia"}', '{"count": 1, "country": "Canada"}', '{"count": 8, "country": "United States"}']
mysql res: ['{"country": "Canada", "count_*": 1}', '{"country": "Sweden", "count_*": 1}', '{"country": "United States", "count_*": 8}', '{"country": "Northern Ireland", "count_*": 1}', '{"country": "Australia", "count_*": 1}']
target res: ['{"country": "Sweden", "count_*": null}', '{"country": "Northern Ireland", "count_*": null}', '{"country": "Australia", "count_*": null}', '{"country": "Canada", "count_*": null}', '{"country": "United States", "count_*": null}']
mismatch between MySQL and target

--------------------------20-----------------
schema:(None, ProgrammingError(1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DISTINCT church_id) FROM wedding WHERE YEAR  =  2016' at line 1"))
---------------------------Execute SQL Query:[SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016]-----------------
execute mysql query error:(1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DISTINCT church_id) FROM wedding WHERE YEAR  =  2016' at line 1")
success_query_count: 8
valid_count: 19
accuracy: 0.42105263157894735
